*jsdoc.txt*	Generate JSDoc to your JavaScript code.

Version: 0.5.1
Author: NAKAMURA, Hisashi <https://github.com/sunvisor>
Modifyed: Shinya Ohynagi <sohyanagi@gmail.com>
Repository: http://github.com/heavenshell/vim-jsdoc/
License: BSD, see LICENSE for more details.

==============================================================================
CONTENTS					*jsdoc-vim-contents*

Introduction		|jsdoc-introduction|
Install			|jsdoc-install|
Tutorial		|jsdoc-tutorial|
Variables		|jsdoc-variables|

==============================================================================
INTRODUCTION					*jsdoc-vim-introduction*

|jsdoc| is a generator of JSDoc.

- This plugin based on https://gist.github.com/3903772#file-jsdoc-vim
  written by NAKAMURA, Hisashi(https://gist.github.com/sunvisor)

==============================================================================
INSTALL						*jsdoc-vim-install*

Install the distributed files into Vim runtime directory which is usually
~/.vim/, or $HOME/vimfiles on Windows.

If you install pathogen that provided from Tim Pope, you should extract the
file into 'bundle' directory.

==============================================================================
TUTORIAL					*jsdoc-vim-tutorial*

Define function to your code.
>
  function Foo(arg1, arg2) {
  }

  var obj = {
    foo: function (arg1, arg2) {
    }
  };
<
  Set cursor on `function` line and type following.
>
  :JsDoc
<
  Then JsDoc put above `function` line.
>
  /**
   * foo
   * @param {} arg1
   * @param {} arg2
   */
  function foo(arg1, arg2) {
  }

  var obj = {
    /**
     * foo
     * @param {} arg1
     * @param {} arg2
     */
    foo: function (arg1, arg2) {
    }
  };
<

==============================================================================
VARIABLES					*jsdoc-vim-variables*

g:jsdoc_additional_descriptions		*g:jsdoc_additional_descriptions*
		If g:jsdoc_input_description is '1' @function and @name
		append to JSDoc.

		Default value is '0'

g:jsdoc_input_description		*g:jsdoc_input_description*
		If g:jsdoc_input_description is '1' Prompt for a function
		description.

		Default value is '0'

g:jsdoc_allow_input_prompt		*g:jsdoc_allow_input_prompt*
		Allow prompt for a value for `@param`, `@return`
		add it to the JSDoc block.
		If prompt not allowed, only `@param`, `@return` add to the
		JSDoc.
		This variables affects to g:jsdoc_return_type and
		g:jsdoc_return_description.

		Default value is '0'

g:jsdoc_return				*g:jsdoc_return*
		Add the `@return` tag.

		Default value is '1'

g:jsdoc_return_type			*g:jsdoc_return_type*
		Prompt for and add a type for the aforementioned `@return` tag.

		Default value is '1'

g:jsdoc_return_description		*g:jsdoc_return_description*
		Prompt for and add a description for the `@return` tag.

		Default value is '1'

g:jsdoc_access_descriptions		*g:jsdoc_access_descriptions*

		Set value to 1 to turn on access tags like
		@access <private|public>`
		Set value to 2 to turn on access tags like `@<private|public>`

		Default value is '0'

g:jsdoc_underscore_private		*g:jsdoc_underscore_private*

		Set value to 1 to turn on detecting underscore starting
		functions as private convention

		Default value is '0'

g:jsdoc_allow_shorthand			*g:jsdoc_allow_shorthand*
		Set value to 1 to allow ECMAScript6 shorthand syntax.

		Default value is '0'
		Deprecated since ver 0.5.0

g:jsdoc_param_description_separator		*g:jsdoc_param_description_separator*

		Characters used to separate @param name and description
		for more readable descriptions.

		Default value is ' '

g:jsdoc_custom_args_hook		*g:jsdoc_custom_args_hook*

		Allow to hook default arg type and description.

		Default value is '{}'
>
		If you set following setting to .vimrc or _vimrc.

		let g:jsdoc_custom_args_hook = {
		\ 'callback\|cb': {
		\   'type': ' {Function} ',
		\   'description': 'Callback function'
		\ }
		\}

		The key of g:jsdoc_custom_args_hook is regex to hook
		If function's signature include `callback` or `cb`
		and g:jsdoc_custom_args_hook's key matched jsdoc.vim would
		generate like following.

		/**
		 * foo
		 *
		 * @param {} bar
		 * @param {Function} callback Callback function
		 * @param {Function} cb Callback function
		 * @return {undefined}
		 */
		function foo(bar, callback, cb) {
		}

g:jsdoc_custom_args_regex_only		*g:jsdoc_custom_args_regex_only*

		Match against regexes only when using custom args.

		Default value is 0

		If you use this, you'll have to modify your custom arg keys
		to be regexes. E.g.

		let g:jsdoc_custom_args_regex_only = 1
      	      	let g:jsdoc_custom_args_hook = {
              	      \   '^\$': {
              	      \     'type': '{jQuery}'
              	      \   },
              	      \   'callback': {
              	      \     'type': '{Function}',
              	      \     'description': 'Callback function'
              	      \   },
              	      \   'data': {
              	      \     'type': '{Object}'
              	      \   },
              	      \   '^e$': {
              	      \     'type': '{Event}'
              	      \   },
              	      \   'el$': {
              	      \     'type': '{Element}'
              	      \   },
              	      \   'handler$': {
              	      \     'type': '{Function}'
              	      \   },
              	      \   '^i$': {
              	      \     'type': '{Number}'
              	      \   },
              	      \   '^_\?is': {
              	      \     'type': '{Boolean}'
              	      \   },
              	      \   'options$': {
              	      \     'type': '{Object}'
              	      \   },
          	      \ }


g:jsdoc_type_hook					*g:jsdoc_type_hook*
		Allow to insert default description depending on the type.

		Default value is '{}'
>
		If you set following setting to .vimrc or _vimrc.

		let g:jsdoc_type_hook = {
		  \ 'object': {
		  \   'description':'An object containing the following fields',
		  \   'force_override': 1,
		  \ },
		  \ 'function': 'Callback function'
		  \ }
		The key of g:jsdoc_type_hook is a variable type.
		If type is an {object} and force_override is 1,
		insert g:jsdoc_type_hook['object']['description'] automagically.
		If forece_override is 0 or not set, JSDoc.vim ask to
		input description. If you did not enter description,
		g:jsdoc_type_hook['object']['description'] would insert 
		automagically.

g:jsdoc_enable_es6					*g:jsdoc_enable_es6*
		Allow to use ECMAScript6's functions.
		Currently, JSDoc can followings.
		- Arrow function
		Default value is '0'

g:jsdoc_tags						*g:jsdoc_tags*
		Allow use of alternate tags
		(the ones that support synonyms) per JsDoc
		documentation.

		Default value is:
			{
			  \  'returns': 'returns',
			  \  'function': 'function',
			  \  'param': 'param',
			  \  'class': 'class'
			\}
>
		Can be changed on a per tag basis, for example: let g:jsdoc_tags = {} | let g:jsdoc_tags['param'] = 'arg'

==============================================================================
CHANGELOG					*jsdoc-changelog*
2015-12-14
- Adds support for tag synonyms.
  (thx @ryanoasis)

2015-09-12
- Tiny refactor.
  Change regex declaration local scope to script scope for not eval every
  method call.

2015-09-06
- g:jsdoc_allow_shorthand is deprecated. Use g:jsdoc_enable_es6 instead.

2015-09-05
- Add g:jsdoc_enable_es6.
  If g:jsdoc_enable_es6 is '1', JSDoc vim can use Arrow function.
  See https://github.com/heavenshell/vim-jsdoc/labels/enhancement

2015-08-29
- Add g:jsdoc_type_hook.
  See https://github.com/heavenshell/vim-jsdoc/issues/36 details.

2015-08-28
- Add function and array to tab completion
  (thx @jacoborus)

2015-07-18
- Remove g:jsdoc_default_mapping.
  See https://github.com/heavenshell/vim-jsdoc/issues/33 details.

2015-06-20
- Fixes Spelling and formatting.
  (thx @ryanoasis)

2015-06-19
- Fixes the jsdoc comment format.
  (thx @IonicaBizau)

2015-06-10
- Add g:jsdoc_custom_args_hook to override default type and description.

2015-05-27
- Add separator between @param's name and description for better readability.
  (thx @aars)

2015-04-28
- Allowing for generator function detection.
  (thx @andjosh)

2015-04-05
- Omit return tag if the input for return type is blank.
  (thx @glifchits)

2015-03-21
- Fix minor spelling.
  added tab auto completion for js types.
  added screencast to show basic functionality and tab completion.
  (thx @ryanoasis)

2015-03-02
- Fix g:jsdoc_access_descriptions behavior reversed.
  (thx @hbetts)

2015-01-16
- Add g:jsdoc_allow_shorthand to allow ECMAScript6 shorthand syntax.

2015-01-15
- Add g:jsdoc_access_descriptions to set access tags.
- Add g:jsdoc_underscore_private to set underscore starting function as
  private.
  (thx @ryanoasis)

2014-06-05
- Add {undefined} as a default type of @return.
  (thx @verkholantsev)

2013-07-07
- Add g:jsdoc_default_mapping option, making it possible to prevent automatic
  <C-l> mapping.

2013-05-30
- Fix @return tag is only added g:jsdoc_allow_input_prompt enabled
  (thx @thomasbelin4)

2013-05-01
- Add g:jsdoc_input_params to allow prompt @param, @return.

2013-04-30
- Add prompts for param types & return type (thx @faceleg)

2013-03-13
- Fix to work special character(number, $, _) included function(thx @mollifier)

vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:
